<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>â€“ Actions</title><link>/v0.51.0/user-guide/actions/</link><description>Recent content in Actions on</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="/v0.51.0/user-guide/actions/index.xml" rel="self" type="application/rss+xml"/><item><title>V0.51.0: Mutate</title><link>/v0.51.0/user-guide/actions/mutate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v0.51.0/user-guide/actions/mutate/</guid><description>
&lt;p>Mutating admission webhooks are invoked first and can modify objects sent to the API server to enforce custom defaults. After an object is sent to Pepr&amp;rsquo;s Mutating Admission Webhook, Pepr will &lt;a href="https://github.com/defenseunicorns/pepr/blob/f01f5eeda16c13ecd0d51b26b8a16ed7e4c1b080/src/lib/mutate-processor.ts#l64">annotate the object&lt;/a> to indicate the status.&lt;/p>
&lt;p>After a successful mutation of an object in a module with UUID static-test, and capability name hello-pepr, expect to see this annotation: &lt;code>static-test.pepr.dev/hello-pepr: succeeded&lt;/code>.&lt;/p>
&lt;h1 id="helpers">Helpers&lt;/h1>
&lt;h3 id="setlabel">&lt;code>SetLabel&lt;/code>&lt;/h3>
&lt;p>&lt;code>SetLabel&lt;/code> is used to set a lable on a Kubernetes object as part of a Pepr Mutate action.&lt;/p>
&lt;p>For example, to add a label when a ConfigMap is created:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Mutate(request &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Here we are adding a label to the ConfigMap.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> .SetLabel(&lt;span style="color:#f1fa8c">&amp;#34;pepr&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;was-here&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Note that we are not returning anything here. This is because Pepr is tracking the changes in each action automatically.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="removelabel">&lt;code>RemoveLabel&lt;/code>&lt;/h3>
&lt;p>&lt;code>RemoveLabel&lt;/code> is used to remove a label on a Kubernetes object as part of a Pepr Mutate action.&lt;/p>
&lt;p>For example, to remove a label when a ConfigMap is updated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Mutate(request &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Here we are removing a label from the ConfigMap.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> .RemoveLabel(&lt;span style="color:#f1fa8c">&amp;#34;remove-me&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Note that we are not returning anything here. This is because Pepr is tracking the changes in each action automatically.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setannotation">&lt;code>SetAnnotation&lt;/code>&lt;/h3>
&lt;p>&lt;code>SetAnnotation&lt;/code> is used to set an annotation on a Kubernetes object as part of a Pepr Mutate action.&lt;/p>
&lt;p>For example, to add an annotation when a ConfigMap is created:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Mutate(request &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Here we are adding an annotation to the ConfigMap.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> .SetAnnotation(&lt;span style="color:#f1fa8c">&amp;#34;pepr.dev&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;annotations-work-too&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Note that we are not returning anything here. This is because Pepr is tracking the changes in each action automatically.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="removeannotation">&lt;code>RemoveAnnotation&lt;/code>&lt;/h3>
&lt;p>&lt;code>RemoveAnnotation&lt;/code> is used to remove an annotation on a Kubernetes object as part of a Pepr Mutate action.&lt;/p>
&lt;p>For example, to remove an annotation when a ConfigMap is updated:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Mutate(request &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Here we are removing an annotation from the ConfigMap.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> .RemoveAnnotation(&lt;span style="color:#f1fa8c">&amp;#34;remove-me&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Note that we are not returning anything here. This is because Pepr is tracking the changes in each action automatically.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="see-also">See Also&lt;/h2>
&lt;p>Looking for some more generic helpers? Check out the &lt;a href="../../sdk/">Module Author SDK&lt;/a> for information on other things that Pepr can help with.&lt;/p></description></item><item><title>V0.51.0: Validate</title><link>/v0.51.0/user-guide/actions/validate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v0.51.0/user-guide/actions/validate/</guid><description>
&lt;p>After the Mutation phase comes the Validation phase where the validating admission webhooks are invoked and can reject requests to enforce custom policies.&lt;/p>
&lt;p>Validate does not annotate the objects that are allowed into the cluster, but the validation webhook can be audited with &lt;code>npx pepr monitor&lt;/code>. Read the &lt;a href="https://docs.pepr.dev/main/best-practices/#monitoring">monitoring docs&lt;/a> for more information.&lt;/p>
&lt;h2 id="basic-validation">Basic Validation&lt;/h2>
&lt;p>Validation actions can either approve or deny requests:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Validate(request &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> (request.HasAnnotation(&lt;span style="color:#f1fa8c">&amp;#34;evil&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> request.Deny(&lt;span style="color:#f1fa8c">&amp;#34;No evil CM annotations allowed.&amp;#34;&lt;/span>, &lt;span style="color:#bd93f9">400&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> request.Approve();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="validation-with-warnings">Validation with Warnings&lt;/h2>
&lt;p>Pepr supports including warning messages in both approval and denial responses. Warnings provide a way to communicate important information to users without necessarily blocking their requests.&lt;/p>
&lt;h3 id="approving-with-warnings">Approving with Warnings&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreatedOrUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .InNamespace(&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Validate(request &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> warnings &lt;span style="color:#ff79c6">=&lt;/span> [];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Check for deprecated fields
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (request.Raw.data &lt;span style="color:#ff79c6">&amp;amp;&amp;amp;&lt;/span> request.Raw.data[&lt;span style="color:#f1fa8c">&amp;#34;deprecated-field&amp;#34;&lt;/span>]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> warnings.push(&lt;span style="color:#f1fa8c">&amp;#34;Warning: The &amp;#39;deprecated-field&amp;#39; is being used and will be removed in future versions&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Check for missing app label
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (&lt;span style="color:#ff79c6">!&lt;/span>request.HasLabel(&lt;span style="color:#f1fa8c">&amp;#34;app&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> warnings.push(&lt;span style="color:#f1fa8c">&amp;#34;Warning: Best practice is to include an &amp;#39;app&amp;#39; label for resource identification&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Return approval with warnings if any were generated
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#ff79c6">return&lt;/span> request.Approve(warnings.length &lt;span style="color:#ff79c6">&amp;gt;&lt;/span> &lt;span style="color:#bd93f9">0&lt;/span> &lt;span style="color:#ff79c6">?&lt;/span> warnings : &lt;span style="color:#8be9fd">undefined&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="denying-with-warnings">Denying with Warnings&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreatedOrUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .InNamespace(&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Validate(request &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Check for dangerous settings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#ff79c6">if&lt;/span> (request.Raw.data &lt;span style="color:#ff79c6">&amp;amp;&amp;amp;&lt;/span> request.Raw.data[&lt;span style="color:#f1fa8c">&amp;#34;dangerous-setting&amp;#34;&lt;/span>] &lt;span style="color:#ff79c6">===&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;true&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> warnings &lt;span style="color:#ff79c6">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;Warning: The &amp;#39;dangerous-setting&amp;#39; field is set to &amp;#39;true&amp;#39;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;Consider using a safer configuration option&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> request.Deny(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;ConfigMap contains dangerous settings that are not allowed&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bd93f9">422&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> warnings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> request.Approve();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Warnings will be included in the Kubernetes API response and can be displayed to users by &lt;code>kubectl&lt;/code> and other Kubernetes clients, providing helpful feedback while still enforcing policies.&lt;/p></description></item><item><title>V0.51.0: Reconcile</title><link>/v0.51.0/user-guide/actions/reconcile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v0.51.0/user-guide/actions/reconcile/</guid><description>
&lt;p>Reconcile functions the same as Watch but is tailored for building Kubernetes Controllers and Operators because it processes callback operations in a &lt;a href="https://github.com/defenseunicorns/pepr/blob/f01f5eeda16c13ecd0d51b26b8a16ed7e4c1b080/src/lib/watch-processor.ts#l86">Queue&lt;/a>, guaranteeing ordered and synchronous processing of events, even when the system may be under heavy load.&lt;/p>
&lt;p>Ordering can be configured to operate in one of two ways: as a single queue that maintains ordering of operations across all resources of a kind (default) or with separate processing queues per resource instance.&lt;/p>
&lt;p>See &lt;a href="../../customization#configuring-reconcile">Configuring Reconcile&lt;/a> for more on configuring how Reconcile behaves.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>When(WebApp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreatedOrUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Validate(validator) &lt;span style="color:#6272a4">// Validate the shape of the resource
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> .Reconcile(&lt;span style="color:#ff79c6">async&lt;/span> instance &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Store.setItem(instance.metadata.name, JSON.stringify(instance));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">await&lt;/span> reconciler(instance); &lt;span style="color:#6272a4">// Reconcile the resource - Deploy Kubernetes manifests, etc.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> } &lt;span style="color:#ff79c6">catch&lt;/span> (error) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.info(&lt;span style="color:#f1fa8c">`Error reconciling instance of WebApp`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">export&lt;/span> &lt;span style="color:#ff79c6">async&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">function&lt;/span> validator(req: &lt;span style="color:#8be9fd">PeprValidateRequest&lt;/span>&amp;lt;&lt;span style="color:#ff79c6">WebApp&lt;/span>&amp;gt;) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">const&lt;/span> ns &lt;span style="color:#ff79c6">=&lt;/span> req.Raw.metadata&lt;span style="color:#ff79c6">?&lt;/span>.&lt;span style="color:#ff79c6">namespace&lt;/span> &lt;span style="color:#ff79c6">??&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;_unknown_&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> (req.Raw.spec.replicas &lt;span style="color:#ff79c6">&amp;gt;&lt;/span> &lt;span style="color:#bd93f9">7&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> req.Deny(&lt;span style="color:#f1fa8c">&amp;#34;max replicas is 7 to prevent noisy neighbors&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> (invalidNamespaces.includes(ns)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> (req.Raw.metadata&lt;span style="color:#ff79c6">?&lt;/span>.&lt;span style="color:#ff79c6">namespace&lt;/span> &lt;span style="color:#ff79c6">===&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;default&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> req.Deny(&lt;span style="color:#f1fa8c">&amp;#34;default namespace is not allowed&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> req.Deny(&lt;span style="color:#f1fa8c">&amp;#34;invalid namespace&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> req.Approve();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>V0.51.0: Watch</title><link>/v0.51.0/user-guide/actions/watch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v0.51.0/user-guide/actions/watch/</guid><description>
&lt;p>&lt;a href="https://kubernetes.io/docs/reference/using-api/api-concepts">Kubernetes&lt;/a> supports efficient change notifications on resources via watches. Pepr uses the Watch action for monitoring resources that previously existed in the cluster and for performing long-running asynchronous events upon receiving change notifications on resources, as watches are not limited by &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#timeouts">timeouts&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>When(a.Namespace)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .WithName(&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo-2&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Watch(&lt;span style="color:#ff79c6">async&lt;/span> ns &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.info(&lt;span style="color:#f1fa8c">&amp;#34;Namespace pepr-demo-2 was created.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// Apply the ConfigMap using K8s server-side apply
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> &lt;span style="color:#ff79c6">await&lt;/span> K8s(kind.ConfigMap).Apply({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata&lt;span style="color:#ff79c6">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name&lt;span style="color:#ff79c6">:&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;pepr-ssa-demo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">namespace&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;pepr-demo-2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#ff79c6">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f1fa8c">&amp;#34;ns-uid&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">:&lt;/span> ns.metadata.uid,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#ff79c6">catch&lt;/span> (error) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// You can use the Log object to log messages to the Pepr controller pod
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> Log.error(error, &lt;span style="color:#f1fa8c">&amp;#34;Failed to apply ConfigMap using server-side apply.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4">// You can share data between actions using the Store, including between different types of actions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">&lt;/span> Store.setItem(&lt;span style="color:#f1fa8c">&amp;#34;watch-data&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;This data was stored by a Watch Action.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>V0.51.0: Finalize</title><link>/v0.51.0/user-guide/actions/finalize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v0.51.0/user-guide/actions/finalize/</guid><description>
&lt;p>A specialized combination of Pepr&amp;rsquo;s &lt;a href="../mutate/">Mutate&lt;/a> &amp;amp; &lt;a href="../watch/">Watch&lt;/a> functionalities that allow a module author to run logic while Kubernetes is &lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/finalizers/">Finalizing&lt;/a> a resource (i.e. cleaning up related resources &lt;em>after&lt;/em> a deleteion request has been accepted). &lt;code>Finalize()&lt;/code> can only be accessed after a &lt;code>Watch()&lt;/code> or &lt;code>Reconcile()&lt;/code>.&lt;/p>
&lt;p>This method will:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Inject a finalizer into the &lt;code>metadata.finalizers&lt;/code> field of the requested resource during the mutation phase of the admission.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Watch appropriate resource lifecycle events &amp;amp; invoke the given callback.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Remove the injected finalizer from the &lt;code>metadata.finalizers&lt;/code> field of the requested resource.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>When(a.ConfigMap)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .InNamespace(&lt;span style="color:#f1fa8c">&amp;#34;hello-pepr-finalize-create&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .WithName(&lt;span style="color:#f1fa8c">&amp;#34;cm-reconcile-create&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Reconcile(&lt;span style="color:#8be9fd;font-style:italic">function&lt;/span> reconcileCreate(cm) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.info(cm, &lt;span style="color:#f1fa8c">&amp;#34;external api call (create): reconcile/callback&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Finalize(&lt;span style="color:#8be9fd;font-style:italic">function&lt;/span> finalizeCreate(cm) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.info(cm, &lt;span style="color:#f1fa8c">&amp;#34;external api call (create): reconcile/finalize&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>V0.51.0: Using Alias Child Logger in Actions</title><link>/v0.51.0/user-guide/actions/using-alias-child-logger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/v0.51.0/user-guide/actions/using-alias-child-logger/</guid><description>
&lt;p>You can use the Alias function to include a user-defined alias in the logs for Mutate, Validate, and Watch actions. This can make for easier debugging since your user-defined alias will be included in the action&amp;rsquo;s logs. This is especially useful when you have multiple actions of the same type in a single module.&lt;/p>
&lt;p>The below example uses Mutate, Validate, and Watch actions with the Alias function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>When(a.Pod)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreatedOrUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Alias(&lt;span style="color:#f1fa8c">&amp;#34;mutate&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Mutate((po, logger) &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger.info(&lt;span style="color:#f1fa8c">`alias: mutate &lt;/span>&lt;span style="color:#f1fa8c">${&lt;/span>po.Raw.metadata.name&lt;span style="color:#f1fa8c">}&lt;/span>&lt;span style="color:#f1fa8c">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>When(a.Pod)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreatedOrUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Alias(&lt;span style="color:#f1fa8c">&amp;#34;validate&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Validate((po, logger) &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger.info(&lt;span style="color:#f1fa8c">`alias: validate &lt;/span>&lt;span style="color:#f1fa8c">${&lt;/span>po.Raw.metadata.name&lt;span style="color:#f1fa8c">}&lt;/span>&lt;span style="color:#f1fa8c">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> po.Approve();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>When(a.Pod)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreatedOrUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Alias(&lt;span style="color:#f1fa8c">&amp;#34;watch&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Watch((po, _, logger) &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger.info(&lt;span style="color:#f1fa8c">`alias: watch &lt;/span>&lt;span style="color:#f1fa8c">${&lt;/span>po.metadata.name&lt;span style="color:#f1fa8c">}&lt;/span>&lt;span style="color:#f1fa8c">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>When(a.Pod)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .IsCreatedOrUpdated()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Alias(&lt;span style="color:#f1fa8c">&amp;#34;reconcile&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Reconcile((po, _, logger) &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger.info(&lt;span style="color:#f1fa8c">`alias: reconcile &lt;/span>&lt;span style="color:#f1fa8c">${&lt;/span>po.metadata.name&lt;span style="color:#f1fa8c">}&lt;/span>&lt;span style="color:#f1fa8c">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will result in log entries when creating a Pod with the that include the alias:&lt;/p>
&lt;p>&lt;strong>Logs for Mutate When Pod &lt;code>red&lt;/code> is Created:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726632368808,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-6hbnt&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;b2221631-e87c-41a2-94c8-cdaef15e7b5f&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/red&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;gvk&amp;#34;&lt;/span>:&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;group&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;version&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;v1&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Pod&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;operation&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;CREATE&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;admissionKind&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Mutate&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Incoming request&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726632368808,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-6hbnt&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;b2221631-e87c-41a2-94c8-cdaef15e7b5f&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/red&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Processing request&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726632368808,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-6hbnt&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing mutation action with alias: mutate&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726632368808,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-6hbnt&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;mutate&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: mutate red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726632368808,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-6hbnt&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;b2221631-e87c-41a2-94c8-cdaef15e7b5f&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;hello-pepr&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Mutation action succeeded (mutateCallback)&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726632368808,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-6hbnt&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;b2221631-e87c-41a2-94c8-cdaef15e7b5f&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/red&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;res&amp;#34;&lt;/span>:&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;b2221631-e87c-41a2-94c8-cdaef15e7b5f&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;allowed&amp;#34;&lt;/span>:true,&lt;span style="color:#f1fa8c">&amp;#34;patchType&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;JSONPatch&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;patch&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;W3sib3AiOiJhZGQiLCJwYXRoIjoiL21ldGFkYXRhL2Fubm90YXRpb25zL3N0YXRpYy10ZXN0LnBlcHIuZGV2fjFoZWxsby1wZXByIiwidmFsdWUiOiJzdWNjZWVkZWQifV0=&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Check response&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726632368809,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-6hbnt&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;b2221631-e87c-41a2-94c8-cdaef15e7b5f&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;POST&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;url&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/mutate/c1a7fb6e3f2ab9dc08909d2de4166987520f317d53b759ab882dfd0b1c198479?timeout=10s&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;status&amp;#34;&lt;/span>:200,&lt;span style="color:#f1fa8c">&amp;#34;duration&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;1 ms&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Logs for Validate When Pod &lt;code>red&lt;/code> is Created:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437605,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;731eff93-d457-4ffc-a98c-0bcbe4c1727a&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/red&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;gvk&amp;#34;&lt;/span>:&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;group&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;version&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;v1&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;kind&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Pod&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;operation&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;CREATE&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;admissionKind&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Validate&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Incoming request&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437606,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;731eff93-d457-4ffc-a98c-0bcbe4c1727a&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/red&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Processing validation request&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437606,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;731eff93-d457-4ffc-a98c-0bcbe4c1727a&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;hello-pepr&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Processing validation action (validateCallback)&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437606,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing validate action with alias: validate&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437606,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;validate&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: validate red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437606,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;731eff93-d457-4ffc-a98c-0bcbe4c1727a&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;hello-pepr&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Validation action complete (validateCallback): allowed&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437606,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;731eff93-d457-4ffc-a98c-0bcbe4c1727a&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;namespace&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-demo&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/red&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;res&amp;#34;&lt;/span>:&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;731eff93-d457-4ffc-a98c-0bcbe4c1727a&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;allowed&amp;#34;&lt;/span>:true&lt;span style="color:#ff79c6">}&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Check response&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726631437606,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-6786948977-j7f9h&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;uid&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;731eff93-d457-4ffc-a98c-0bcbe4c1727a&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;POST&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;url&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;/validate/c1a7fb6e3f2ab9dc08909d2de4166987520f317d53b759ab882dfd0b1c198479?timeout=10s&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;status&amp;#34;&lt;/span>:200,&lt;span style="color:#f1fa8c">&amp;#34;duration&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;5 ms&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Logs for Watch and Reconcile When Pod &lt;code>red&lt;/code> is Created:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504518,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing reconcile action with alias: reconcile&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504518,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;reconcile&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: reconcile red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504518,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing watch action with alias: watch&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504518,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;watch&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: watch red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504521,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing reconcile action with alias: reconcile&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504521,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;reconcile&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: reconcile red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504521,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing watch action with alias: watch&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504521,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;watch&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: watch red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504528,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing reconcile action with alias: reconcile&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504528,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;reconcile&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: reconcile red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504528,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing watch action with alias: watch&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798504528,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;watch&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: watch red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798510464,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing watch action with alias: watch&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798510464,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;watch&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: watch red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798510466,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;Executing reconcile action with alias: reconcile&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">{&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;level&amp;#34;&lt;/span>:30,&lt;span style="color:#f1fa8c">&amp;#34;time&amp;#34;&lt;/span>:1726798510466,&lt;span style="color:#f1fa8c">&amp;#34;pid&amp;#34;&lt;/span>:16,&lt;span style="color:#f1fa8c">&amp;#34;hostname&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;pepr-static-test-watcher-6dc69654c9-5ql6b&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;alias&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;reconcile&amp;#34;&lt;/span>,&lt;span style="color:#f1fa8c">&amp;#34;msg&amp;#34;&lt;/span>:&lt;span style="color:#f1fa8c">&amp;#34;alias: reconcile red&amp;#34;&lt;/span>&lt;span style="color:#ff79c6">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> The Alias function is optional and can be used to provide additional context in the logs. You must pass the logger object as shown above to the action to use the Alias function.&lt;/p>
&lt;h2 id="see-also">See Also&lt;/h2>
&lt;p>Looking for some more generic helpers? Check out the &lt;a href="../../sdk/">Module Author SDK&lt;/a> for information on other things that Pepr can help with.&lt;/p></description></item></channel></rss>